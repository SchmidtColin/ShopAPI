<?php

namespace ShopBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * shop_reviewsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class shop_reviewsRepository extends EntityRepository
{

    public function getShop(int $shopId, string $password)
    {
        return $this->getEntityManager()->createQuery('SElECT s.id from ShopBundle:Shops s WHERE s.id=:id AND s.interfacePassword=:pw')
            ->setParameter('id', $shopId)
            ->setParameter('pw', $password)
            ->getResult();
    }

    public function getByShop(int $shopId, string $password, $firstElement, $items)
    {
        $id = $this->getShop($shopId, $password);

        return $this->getEntityManager()->createQuery(
            'SELECT r.review FROM ShopBundle:ShopReviews r WHERE r.fkShop=:shopId'
        )->setParameter('shopId', $id)
            ->setFirstResult($firstElement-1)
            ->setMaxResults($items)
            ->getResult();
    }

    public function getByCreationAndUdateDate($shopId, $password, $firstElement, $items, $creation, $update)
    {
        $id = $this->getShop($shopId, $password);

        return $this->getEntityManager()->createQuery(
            'SELECT r.review FROM ShopBundle:ShopReviews r WHERE r.fkShop=:shopId AND r.createdAt :createdat AND r.updatedAt :updatedat '
        )->setParameter('shopId', $id)
            ->setParameter('createdat', $creation)
            ->setParameter('updatesdat', $update)
            ->setFirstResult($firstElement-1)
            ->setMaxResults($items)
            ->getResult();
    }

    public function getByDate($shopId, $password, $firstElement, $items, $dateinput, $query)
    {
        $id = $this->getShop($shopId, $password);
        return $this->getEntityManager()->createQuery(
            ''.$query
        )->setParameter('shopId', $id)
            ->setParameter('dateinput', $dateinput)
            ->setFirstResult($firstElement-1)
            ->setMaxResults($items)
            ->getResult();
    }

    public function getByCreationDate($shopId, $password, $firstElement, $items, $creation)
    {
        $sql = 'SELECT r.review FROM ShopBundle:ShopReviews r WHERE r.fkShop=:shopId AND r.createdAt=:dateinput';
        return $this->getByDate($shopId, $password, $firstElement, $items, $creation, $sql);
    }

    public function getByUpdateDate($shopId, $password, $firstElement, $items, $update)
    {
        $sql = 'SELECT r.review FROM ShopBundle:ShopReviews r WHERE r.fkShop=:shopId AND r.updatedAt=:dateinput';
        return $this->getByDate($shopId, $password, $firstElement, $items, $update, $sql);
    }

}
